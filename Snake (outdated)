from Tkinter import*
import time
from random import shuffle

class Snake:
    def __init__(self, master = None):
        master["bg"] = "black"

        self.frame = Frame(master)
        self.frame["bg"] = "black"
        self.frame.pack()
        
        '''Coordenadas do corpo'''
        self.xi = 2
        self.yi = 2
        self.xf = 20
        self.yf = 20
        self.xdif = 19
        self.ydif = 19

        '''Extremos do Canvas'''
        self.xmin = 2
        self.ymin = 2
        self.xmax = 382
        self.ymax = 287

        '''Listas de posicoes possiveis da comida'''
        self.Lx = [2, 21, 40, 59, 78, 97, 116, 135, 154, 173, 192, 211, 230, 249, 268, 287, 306, 325, 344, 363, 382]
        self.Ly = [2, 21, 40, 59, 78, 97, 116, 135, 154, 173, 192, 211, 230, 249, 268, 287]
        
        '''Distancia de movimento'''
        self.dmove = 19

        '''Direcao de movimento'''
        self.direct = 0
        
        '''Variavel apontando se a cobra comeu a comida'''
        self.ateF = 0
        
        '''Cria o Canvas e cofingura-o'''
        self.canvas = Canvas(self.frame)
        self.canvas["width"] = 399
        self.canvas["height"] = 304
##        self.canvas["bg"] = "black"
        self.canvas.pack(side = TOP)

        '''Lista com o corpo da cobra'''
        '''Cria o corpo da cobra'''
        self.SnakeB = []
        self.Sbody1 = self.canvas.create_rectangle(self.xi, self.yi, self.xf, self.yf, fill = "darkgreen")
        self.Sbody2 = self.canvas.create_rectangle(self.xi+self.xdif, self.yi, self.xf+self.xdif, self.yf, fill = "darkgreen")
        self.Sbody3 = self.canvas.create_rectangle(self.xi+2*self.xdif, self.yi, self.xf+2*self.xdif, self.yf, fill = "darkgreen")
##        self.Sbody4 = self.canvas.create_rectangle(self.xi+3*self.xdif, self.yi, self.xf+3*self.xdif, self.yf, fill = "darkgreen")

        '''Adiciona os quadrados(partes do corpo) a lista(corpo)'''
        self.SnakeB.append(self.Sbody1)
        self.SnakeB.append(self.Sbody2)
        self.SnakeB.append(self.Sbody3)
##        self.SnakeB.append(self.Sbody4)

        '''Associa os movimentos da cobra aos botoes do teclado'''
        self.canvas.bind("<Up>", self.moveSnakeYUE)
        self.canvas.bind("<Down>", self.moveSnakeYDE)
        self.canvas.bind("<Right>", self.moveSnakeXRE)
        self.canvas.bind("<Left>", self.moveSnakeXLE)
        self.canvas.focus_set()

        self.mtp = 1
        self.mtpA = 4
        self.mtpB = (len(self.SnakeB)-1)
        self.mtpC = -1
        
        self.food()
##        print "(", int(self.xi), ",", int(self.yi), ",", self.xf, ",", self.yf, ")"
##        print "(", int(self.x1), ",", int(self.y1), ")"
        
    '''Move a cobra para direita'''
    def moveSnakeXRE(self, event):
        self.direct = 0
        while self.direct == 0:
            if self.xi + (len(self.SnakeB)-1)*self.xdif < self.xmax:
                '''Deleta o ultimo quadrado(parte de tras da cobra) do canvas'''
                self.canvas.delete(self.SnakeB[0])

                '''Remove o ultimo quadrado(parte de tras da cobra) da lista(corpo da cobra)'''
                self.SnakeB.remove(self.SnakeB[0]) 

                if self.ateF == 1:
                    self.xi += self.dmove
                    self.xf += self.dmove
                    self.Sbodyplus = self.canvas.create_rectangle(self.xi+(len(self.SnakeB)-1)*self.xdif, self.yi, self.xf+(len(self.SnakeB)-1)*self.xdif, self.yf, fill = "darkgreen")
                    self.SnakeB.append(self.Sbodyplus)
    ##                self.ateF = 0
                else:
                    self.xi += self.dmove
                    self.xf += self.dmove
                    self.Sbodyplus = self.canvas.create_rectangle(self.xi+len(self.SnakeB)*self.xdif, self.yi, self.xf+len(self.SnakeB)*self.xdif, self.yf, fill = "darkgreen")
                    self.SnakeB.append(self.Sbodyplus)

                '''Chama o metodo que aumenta o corpo da cobra'''
                if self.xi+(self.mtpB*self.xdif) == self.x1 and self.yi == self.y1:
                    self.snakeGrow()
                    self.reFood()
            else:
                self.direct = 4
                self.canvas.destroy()
                self.hitWall()
            print "(", int(self.xi+(self.mtpB*self.xdif)), ",", int(self.yi), ",", self.xf+(self.mtpB*self.xdif), ",", self.yf, ")"
            print "(", int(self.x1), ",", int(self.y1), ")"
            self.canvas.update()
            time.sleep(0.1)

        
    '''Move a cobra para esquerda'''
    def moveSnakeXLE(self, event):
        self.direct = 1
        while self.direct == 1:
            if self.xi + (len(self.SnakeB)-1)*self.xdif > self.xmin:
                self.canvas.delete(self.SnakeB[0])
                self.SnakeB.remove(self.SnakeB[0])

                if self.ateF == 1:
                    self.xi -= self.dmove
                    self.xf -= self.dmove
                    self.Sbodyplus = self.canvas.create_rectangle(self.xi+(len(self.SnakeB)-1)*self.xdif, self.yi, self.xf+(len(self.SnakeB)-1)*self.xdif, self.yf, fill = "darkgreen")
                    self.SnakeB.append(self.Sbodyplus)
                    
                else:
                    self.xi -= self.dmove
                    self.xf -= self.dmove
                    self.Sbodyplus = self.canvas.create_rectangle(self.xi+len(self.SnakeB)*self.xdif, self.yi, self.xf+len(self.SnakeB)*self.xdif, self.yf, fill = "darkgreen")
                    self.SnakeB.append(self.Sbodyplus)

                '''Chama o metodo que aumenta o corpo da cobra'''
                if self.xi+(self.mtpB*self.xdif) == self.x1 and self.yi == self.y1:
                    self.snakeGrow()
                    self.reFood()
            else:
                self.direct = 4
                self.canvas.destroy()
                self.hitWall()
            print "(", int(self.xi), ",", int(self.yi), ",", self.xf, ",", self.yf, ")"
            print "(", int(self.x1), ",", int(self.y1), ")"
            self.canvas.update()
            time.sleep(0.1)

    '''Move a cobra para baixo'''
    def moveSnakeYDE(self, event):
        self.direct = 2
        while self.direct == 2:
            if self.yi < self.ymax:
                self.canvas.delete(self.SnakeB[0])
                self.SnakeB.remove(self.SnakeB[0])
                self.yi += self.dmove
                self.yf += self.dmove
                self.Sbodyplus = self.canvas.create_rectangle(self.xi+len(self.SnakeB)*self.xdif, self.yi-3+self.ydif/5, self.xf+len(self.SnakeB)*self.xdif, self.yf-3+self.ydif/5, fill = "darkgreen")
                self.SnakeB.append(self.Sbodyplus)

                '''Chama o metodo que aumenta o corpo da cobra'''
                if self.xi+(self.mtpB*self.xdif) == self.x1 and self.yi == self.y1:
                    self.snakeGrow()
                    self.reFood
            else:
                self.direct = 4
                self.canvas.destroy()
                self.hitWall()
            print "(", int(self.xi), ",", int(self.yi), ",", self.xf, ",", self.yf, ")"
            print "(", int(self.x1), ",", int(self.y1), ")"
            self.canvas.update()
            time.sleep(0.1)

    '''Move a cobra para cima'''
    def moveSnakeYUE(self, event):
        self.direct = 3
        while self.direct == 3:
            if self.yi > self.ymin:            
                self.canvas.delete(self.SnakeB[0])
                self.SnakeB.remove(self.SnakeB[0])
                self.yi -= self.dmove
                self.yf -= self.dmove
                self.Sbodyplus = self.canvas.create_rectangle(self.xi+len(self.SnakeB)*self.xdif, self.yi-3+self.ydif/5, self.xf+len(self.SnakeB)*self.xdif, self.yf-3+self.ydif/5, fill = "darkgreen")
                self.SnakeB.append(self.Sbodyplus)

                '''Chama o metodo que aumenta o corpo da cobra'''
                if self.xi+(self.mtpB*self.xdif) == self.x1 and self.yi == self.y1:
                    self.snakeGrow()
                    self.reFood()
            else:
                self.direct = 4
                self.canvas.destroy()
                self.hitWall()
            print "(", int(self.xi), ",", int(self.yi), ",", self.xf, ",", self.yf, ")"
            print "(", int(self.x1), ",", int(self.y1), ")"
            self.canvas.update()
            time.sleep(0.1)

    def hitWall(self):
        self.lbl = Label(self.frame, text = "GAME OVER", font = ("Calibri", 40, "bold"), fg = "white", bg = "black")
        self.lbl.pack()

    def food(self):
        '''Embaralha a lista com as possiveis coordenadas da comida'''
        shuffle(self.Lx)
        shuffle(self.Ly)

        '''Atribui as coordenadas a comida e cria a comida'''
        self.x1 = self.Lx[0]
        self.y1 = self.Ly[0]
        self.food = self.canvas.create_oval(self.x1, self.y1, self.x1+18, self.y1+18, fill = "yellow")

    def reFood(self):
        '''Embaralha a lista com as possiveis coordenadas da comida'''
        shuffle(self.Lx)
        shuffle(self.Ly)

        '''Atribui as coordenadas a comida e cria a comida'''
        self.x1 = self.Lx[0]
        self.y1 = self.Ly[0]
        self.food = self.canvas.create_oval(self.x1, self.y1, self.x1+18, self.y1+18, fill = "yellow")

    '''Aumenta o corpo da cobra'''
    def snakeGrow(self):
        if self.xi-(self.mtpA*self.xdif) < self.xi-(self.mtpC*self.xdif):
            '''Define o multiplicador de coordenadas do corpo'''
##            self.mtp = len(self.SnakeB)

            '''Cria mais um quadrado(parte do corpo) e adiciona na lista(corpo)'''
            self.SbodyZ = self.canvas.create_rectangle(self.xi+(self.mtpA*self.xdif), self.yi, self.xf+(self.mtpA*self.xdif), self.yf, fill = "darkgreen")
            self.canvas.delete(self.food)
            self.SnakeB.insert(1, self.SbodyZ)
                
        elif self.xi-(self.mtpA*self.xdif) > self.xi-(self.mtpC*self.xdif):
##            '''Cria mais um quadrado(parte do corpo) e adiciona na lista(corpo)'''
##            self.SbodyZ = self.canvas.create_rectangle(self.xi+self.mtpA*self.xdif, self.yi, self.xf+self.mtpA*self.xdif, self.yf, fill = "darkgreen")
##            self.canvas.delete(self.food)
##            self.SnakeB.insert(0, self.SbodyZ)
            '''Cria mais um quadrado(parte do corpo) e adiciona na lista(corpo)'''
            self.SbodyZ = self.canvas.create_rectangle(self.xi, self.yi+self.mtpA*self.ydif, self.xf, self.yf+self.mtpA*self.ydif, fill = "darkgreen")
            self.canvas.delete(self.food)
            self.SnakeB.insert(0, self.SbodyZ)
##        else:
##            if self.yi-(self.mtpA*self.ydif) < self.yi-(self.mtpC*self.ydif):
##                '''Cria mais um quadrado(parte do corpo) e adiciona na lista(corpo)'''
##                self.SbodyZ = self.canvas.create_rectangle(self.xi, self.yi+self.mtpC*self.ydif, self.xf, self.yf+self.mtpC*self.ydif, fill = "darkgreen")
##                self.canvas.delete(self.food)
##                self.SnakeB.insert(0, self.SbodyZ)
##
##            else:
##                '''Cria mais um quadrado(parte do corpo) e adiciona na lista(corpo)'''
##                self.SbodyZ = self.canvas.create_rectangle(self.xi, self.yi-self.mtpA*self.ydif, self.xf, self.yf-self.mtpA*self.ydif, fill = "darkgreen")
##                self.canvas.delete(self.food)
##                self.SnakeB.insert(0, self.SbodyZ)

        self.mtp += 1
        self.mtpA += 1
        self.mtpB += 1
        self.mtpC += 1
        
        '''Chama o metodo da comida'''
        self.food
        
root = Tk()
Snake(root)
root.mainloop()
